
Задание к л.р..2.1.

+ Калькулятор обыкновенных дробей без графического интерфейса или с простым графическим интерфейсом. Тесты. Два способа расчета выражения. Последовательность выполнения работы – реализация одного из методов и написание тестов. Использование написанных ранее тестов при реализации второго способа расчета выражения.

+ Проверка своей программы путем обмена тестами с одногруппниками.

+ Пройти по всем своим программам и исправить ошибки, связанные с некорректным использованием исключительных ситуаций (можно сделать поздее - к экзамену, но лучше сделать сразу).

+ Тесты к обыкновенным дробям и к стеку.  Дебаггер, тестовые печати, логер.

+ Исследование следующих возможностей фреймворка тестирования: разнообразные операторы assert, тестирование исключительных ситуаций, тестирование с ограничением по времени, возможность пометить тест как игнорируемый, использование fixture, создание параметризованных тестов.

- assertEquals(int1, int2) или утверждение эквивалентности. Проверяет на равенство двух значений любого примитивного типа;
- assertFalse, assertTrue(condition) или булевые утверждения. Вместо “condition” необходимо вставить проверяемое условие;
- assertNull, assertNotNull(obj) относятся к Null утверждениям и проверяет содержимое объектной переменной на Null значение;
- assertSame(obj1, obj2) утверждение позволяет сравнивать объектные переменные.

+ Тестирование public методов.


Нотация алгоритм:

    Пока есть ещё символы для чтения:

           - Читаем очередной символ.
           - Если символ является числом, добавляем его к выходной строке.
           - Если символ является символом функции, помещаем его в стек.
           - Если символ является открывающей скобкой, помещаем его в стек.
           - Если символ является закрывающей скобкой:
До тех пор, пока верхним элементом стека не станет открывающая скобка, выталкиваем элементы из стека в выходную строку. 
При этом открывающая скобка удаляется из стека, но в выходную строку не добавляется. 
Если после этого шага на вершине стека оказывается символ функции, выталкиваем его в выходную строку. 
            - Если символ является оператором тогда:
        1) пока…
        	приоритет оператора меньше либо равен приоритету оператора, находящегося на вершине стека, 
		выталкиваем верхние элементы стека в выходную строку;
        2) помещаем оператор в стек.
Когда входная строка закончилась, выталкиваем все символы из стека в выходную строку. 
В стеке остаются только символы операторов.
